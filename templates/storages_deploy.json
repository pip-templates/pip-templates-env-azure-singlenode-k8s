{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageSKU": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The type of replication to use for the storage account."
      }
    },
    "blobStorageName": {
      "type": "string",
      "defaultValue": "piptemplatesblobstorage",
      "metadata": {
        "description": "The value to use the storage account name"
      }
    },
    "queuesStorageName": {
      "type": "string",
      "defaultValue": "piptemplatesqueuesstorage",
      "metadata": {
        "description": "The value to use the storage account name"
      }
    },
    "storageName": {
      "type": "string",
      "defaultValue": "piptemplatesstorage",
      "metadata": {
        "description": "The value to use the storage account name"
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('storageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('storageSKU')]"
      },
      "kind": "Storage",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    }
  ],
  "outputs": {
    "groupLocation": {
      "type": "string",
      "value": "[resourceGroup().location]"
    },
    "blobStorageUri": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Storage/storageAccounts/',parameters('storageName'))).primaryEndpoints.blob]"
    },
    "queuesStorageUri": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Storage/storageAccounts/',parameters('storageName'))).primaryEndpoints.queue]"
    }
  }
}